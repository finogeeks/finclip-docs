import{_ as e,c as t,a9 as r,o as s}from"./chunks/framework.BjXht68r.js";const u=JSON.parse('{"title":"监控指标","description":"A guide in my new Starlight docs site.","frontmatter":{"title":"监控指标","description":"A guide in my new Starlight docs site."},"headers":[],"relativePath":"docs/monitoring/metrics.md","filePath":"docs/monitoring/metrics.md"}'),n={name:"docs/monitoring/metrics.md"};function i(l,o,a,_,g,d){return s(),t("div",null,o[0]||(o[0]=[r('<h2 id="主机相关指标" tabindex="-1">主机相关指标 <a class="header-anchor" href="#主机相关指标" aria-label="Permalink to &quot;主机相关指标&quot;">​</a></h2><h3 id="_1-cpu" tabindex="-1">1. <strong>CPU</strong> <a class="header-anchor" href="#_1-cpu" aria-label="Permalink to &quot;1. **CPU**&quot;">​</a></h3><ul><li><strong>CPU使用率（CPU Utilization）</strong>：监控CPU的总使用率和各核心使用率。高使用率可能表明负载过重。</li><li><strong>系统占用率（System CPU Usage）</strong>：表示操作系统内核占用的CPU时间，持续过高可能需要关注系统进程和配置。</li><li><strong>用户占用率（User CPU Usage）</strong>：表示用户进程占用的CPU时间，帮助评估应用对CPU的需求。</li><li><strong>CPU等待时间（IO Wait）</strong>：CPU等待磁盘或网络I/O操作完成的时间，较高的I/O等待可能意味着磁盘或网络瓶颈。</li></ul><h3 id="_2-内存" tabindex="-1">2. <strong>内存</strong> <a class="header-anchor" href="#_2-内存" aria-label="Permalink to &quot;2. **内存**&quot;">​</a></h3><ul><li><strong>内存使用率（Memory Usage）</strong>：当前内存使用量，帮助识别内存消耗情况。高使用率可能导致性能下降。</li><li><strong>可用内存（Available Memory）</strong>：系统剩余内存量，低可用内存可能表明系统接近内存上限。</li><li><strong>缓存内存（Cached Memory）</strong>：操作系统用作缓存的内存量，有助于提高文件和块设备的访问速度。</li></ul><h3 id="_3-磁盘" tabindex="-1">3. <strong>磁盘</strong> <a class="header-anchor" href="#_3-磁盘" aria-label="Permalink to &quot;3. **磁盘**&quot;">​</a></h3><ul><li><strong>磁盘使用率（Disk Usage）</strong>：磁盘分区的使用情况，帮助监控磁盘空间是否充足。</li><li><strong>磁盘读写速率（Disk Read/Write Rate）</strong>：每秒的磁盘读取和写入字节数，表示I/O活跃度。</li><li><strong>磁盘I/O等待时间（Disk IO Wait Time）</strong>：等待磁盘I/O操作完成的时间。高I/O等待时间可能表明磁盘性能不足。</li><li><strong>磁盘I/O操作次数（Disk IO Operations）</strong>：每秒读写操作的次数，帮助识别I/O瓶颈。</li></ul><h3 id="_4-网络" tabindex="-1">4. <strong>网络</strong> <a class="header-anchor" href="#_4-网络" aria-label="Permalink to &quot;4. **网络**&quot;">​</a></h3><ul><li><strong>网络吞吐量（Network Throughput）</strong>：每秒传输的数据量，包括入网（接收）和出网（发送），帮助了解网络带宽的使用情况。</li><li><strong>网络延迟（Network Latency）</strong>：数据在网络中的传输时间，延迟增加可能表明网络拥堵或带宽不足。</li><li><strong>丢包率（Packet Loss）</strong>：数据包传输过程中丢失的比例，高丢包率通常表明网络问题。</li><li><strong>网络连接数（Network Connections）</strong>：活跃的TCP/UDP连接数，帮助识别网络连接的使用情况。</li></ul><h3 id="_5-进程" tabindex="-1">5. <strong>进程</strong> <a class="header-anchor" href="#_5-进程" aria-label="Permalink to &quot;5. **进程**&quot;">​</a></h3><ul><li><strong>关键进程CPU和内存占用</strong>：监控关键进程的CPU和内存使用情况，及时发现异常消耗资源的进程。</li><li><strong>进程运行时间（Process Uptime）</strong>：记录进程的持续运行时间，有助于发现进程的重启或异常终止。</li></ul><h2 id="k8s-相关指标" tabindex="-1">K8S 相关指标 <a class="header-anchor" href="#k8s-相关指标" aria-label="Permalink to &quot;K8S 相关指标&quot;">​</a></h2><h3 id="_1-pod-和容器" tabindex="-1">1. <strong>Pod 和容器</strong> <a class="header-anchor" href="#_1-pod-和容器" aria-label="Permalink to &quot;1. **Pod 和容器**&quot;">​</a></h3><ul><li><p><strong>container_cpu_usage_seconds_total</strong>: 容器的CPU使用时间（秒）。</p></li><li><p><strong>container_memory_usage_bytes</strong>: 容器使用的内存（字节）。</p></li><li><p><strong>container_memory_working_set_bytes</strong>: 容器正在使用的内存，不包括缓存。</p></li><li><p><strong>container_fs_usage_bytes</strong>: 容器使用的磁盘空间（字节）。</p></li><li><p><strong>container_last_seen</strong>: 容器最后一次被检查的时间。</p></li><li><p><strong>container_start_time_seconds</strong>: 容器的启动时间戳（秒）。</p></li><li><p><strong>kube_pod_status_phase</strong>: Pod的当前状态（Running、Pending、Succeeded、Failed、Unknown）。</p></li><li><p><strong>kube_pod_container_status_restarts_total</strong>: Pod容器的重启次数。</p></li><li><p><strong>kube_pod_container_status_running</strong>: Pod容器是否正在运行。</p></li><li><p><strong>kube_pod_container_status_terminated</strong>: Pod容器是否已终止。</p></li><li><p><strong>kube_pod_container_status_waiting</strong>: Pod容器是否处于等待状态。</p></li></ul><h3 id="_2-调度和资源分配" tabindex="-1">2. <strong>调度和资源分配</strong> <a class="header-anchor" href="#_2-调度和资源分配" aria-label="Permalink to &quot;2. **调度和资源分配**&quot;">​</a></h3><ul><li><strong>kube_pod_container_resource_requests_cpu_cores</strong>: Pod容器请求的CPU资源（核）。</li><li><strong>kube_pod_container_resource_requests_memory_bytes</strong>: Pod容器请求的内存资源（字节）。</li><li><strong>kube_pod_container_resource_limits_cpu_cores</strong>: Pod容器的CPU限制（核）。</li><li><strong>kube_pod_container_resource_limits_memory_bytes</strong>: Pod容器的内存限制（字节）。</li><li><strong>kube_node_status_capacity_cpu_cores</strong>: 节点的CPU总容量（核）。</li><li><strong>kube_node_status_capacity_memory_bytes</strong>: 节点的内存总容量（字节）。</li><li><strong>kube_node_status_allocatable_cpu_cores</strong>: 节点的可分配CPU容量（核）。</li><li><strong>kube_node_status_allocatable_memory_bytes</strong>: 节点的可分配内存容量（字节）。</li></ul><h3 id="_3-控制器和副本" tabindex="-1">3. <strong>控制器和副本</strong> <a class="header-anchor" href="#_3-控制器和副本" aria-label="Permalink to &quot;3. **控制器和副本**&quot;">​</a></h3><ul><li><strong>kube_deployment_status_replicas</strong>: Deployment的当前副本数。</li><li><strong>kube_deployment_status_replicas_updated</strong>: 已更新的Deployment副本数。</li><li><strong>kube_replica_set_status_replicas</strong>: ReplicaSet的副本数。</li><li><strong>kube_replica_set_status_replicas_available</strong>: 可用的ReplicaSet副本数。</li><li><strong>kube_statefulset_status_replicas</strong>: StatefulSet的副本数。</li><li><strong>kube_statefulset_status_replicas_available</strong>: 可用的StatefulSet副本数。</li></ul><h3 id="_4-api服务" tabindex="-1">4. <strong>API服务</strong> <a class="header-anchor" href="#_4-api服务" aria-label="Permalink to &quot;4. **API服务**&quot;">​</a></h3><ul><li><strong>apiserver_request_duration_seconds</strong>: API服务器处理请求的时间（秒）。</li><li><strong>apiserver_request_count</strong>: API服务器处理的请求总数。</li><li><strong>apiserver_request_latencies_seconds</strong>: API服务器请求的延迟分布。</li><li><strong>controller_manager_reconcile_duration_seconds</strong>: 控制器管理器的重新调度时长（秒）。</li><li><strong>controller_manager_reconcile_count</strong>: 控制器管理器的重新调度次数。</li></ul><h3 id="_5-网络和负载" tabindex="-1">5. <strong>网络和负载</strong> <a class="header-anchor" href="#_5-网络和负载" aria-label="Permalink to &quot;5. **网络和负载**&quot;">​</a></h3><ul><li><strong>kube_service_info</strong>: Kubernetes服务的元数据。</li><li><strong>kube_endpoint_address_count</strong>: 服务的地址数。</li><li><strong>kube_service_spec_type</strong>: 服务类型（ClusterIP、NodePort、LoadBalancer等）。</li></ul><h3 id="_6-存储" tabindex="-1">6. <strong>存储</strong> <a class="header-anchor" href="#_6-存储" aria-label="Permalink to &quot;6. **存储**&quot;">​</a></h3><ul><li><strong>kube_persistentvolumeclaim_resource_requests_storage_bytes</strong>: 持久卷声明请求的存储空间（字节）。</li><li><strong>kube_persistentvolumeclaim_resource_requests_storage_bytes</strong>: 持久卷声明实际使用的存储空间（字节）。</li><li><strong>kube_persistentvolume_status_phase</strong>: 持久卷的状态（Available、Bound、Released、Failed）。</li></ul><h2 id="redis-相关指标" tabindex="-1">Redis 相关指标 <a class="header-anchor" href="#redis-相关指标" aria-label="Permalink to &quot;Redis 相关指标&quot;">​</a></h2><h3 id="_1-资源使用" tabindex="-1">1. 资源使用 <a class="header-anchor" href="#_1-资源使用" aria-label="Permalink to &quot;1. 资源使用&quot;">​</a></h3><ul><li><p><strong>used_cpu_sys</strong>: Redis进程在系统中使用的CPU时间（秒）。</p></li><li><p><strong>used_cpu_user</strong>: Redis进程在用户空间中使用的CPU时间（秒）。</p></li><li><p><strong>used_cpu_sys_children</strong>: 所有子进程在系统中使用的CPU时间（秒）。</p></li><li><p><strong>used_cpu_user_children</strong>: 所有子进程在用户空间中使用的CPU时间（秒）。</p></li><li><p><strong>used_memory_rss</strong>: 操作系统分配给Redis进程的内存量（RSS）。</p></li><li><p><strong>used_memory_peak</strong>: Redis实例的最大内存使用量（字节）。</p></li><li><p><strong>maxmemory</strong>: Redis配置的最大内存限制（字节）。</p></li><li><p><strong>mem_fragmentation_ratio</strong>: 内存碎片率。计算为<code>used_memory_rss / used_memory</code>，用于指示内存的浪费情况。</p></li><li><p><strong>used_memory</strong>: Redis实例已使用的内存总量（字节）。</p></li></ul><h3 id="_2-键值操作" tabindex="-1">2. <strong>键值操作</strong> <a class="header-anchor" href="#_2-键值操作" aria-label="Permalink to &quot;2. **键值操作**&quot;">​</a></h3><ul><li><strong>total_connections_received</strong>: Redis接收到的总连接数。</li><li><strong>total_commands_processed</strong>: Redis处理的命令总数。</li><li><strong>keyspace_hits</strong>: 查询缓存命中的次数。</li><li><strong>keyspace_misses</strong>: 查询缓存未命中的次数。</li><li><strong>evicted_keys</strong>: 被驱逐的键数（由于内存限制）。</li><li><strong>expired_keys</strong>: 过期的键数。</li><li><strong>persistent_connections</strong>: 持久连接数。</li></ul><h3 id="_3-持久化" tabindex="-1">3. <strong>持久化</strong> <a class="header-anchor" href="#_3-持久化" aria-label="Permalink to &quot;3. **持久化**&quot;">​</a></h3><ul><li><strong>rdb_changes_since_last_save</strong>: 上次RDB持久化以来的键变更数量。</li><li><strong>rdb_last_bgsave_status</strong>: 上次RDB保存操作的状态（OK或ERROR）。</li><li><strong>rdb_last_save_time</strong>: 上次RDB持久化的时间戳。</li><li><strong>aof_current_size</strong>: AOF文件的当前大小（字节）。</li><li><strong>aof_last_bgrewrite_status</strong>: 上次AOF重写的状态。</li><li><strong>aof_last_write_status</strong>: 上次AOF写操作的状态。</li></ul><h3 id="_4-集群和复制" tabindex="-1">4. <strong>集群和复制</strong> <a class="header-anchor" href="#_4-集群和复制" aria-label="Permalink to &quot;4. **集群和复制**&quot;">​</a></h3><ul><li><strong>role</strong>: Redis实例的角色（master/slave）。</li><li><strong>connected_slaves</strong>: 当前连接的从节点数。</li><li><strong>master_last_io_seconds_ago</strong>: 主节点与从节点的最后交互时间（秒）。</li><li><strong>replication_backlog_active</strong>: 是否启用复制积压日志（1表示启用，0表示禁用）。</li></ul><h3 id="_5-网络" tabindex="-1">5. <strong>网络</strong> <a class="header-anchor" href="#_5-网络" aria-label="Permalink to &quot;5. **网络**&quot;">​</a></h3><ul><li><strong>total_net_input_bytes</strong>: Redis接收到的总字节数。</li><li><strong>total_net_output_bytes</strong>: Redis发送的总字节数。</li><li><strong>blocked_clients</strong>: 当前被阻塞的客户端数。</li></ul><h3 id="_6-慢查询" tabindex="-1">6. <strong>慢查询</strong> <a class="header-anchor" href="#_6-慢查询" aria-label="Permalink to &quot;6. **慢查询**&quot;">​</a></h3><ul><li><strong>slowlog_len</strong>: Redis慢查询日志中的条目数。</li><li><strong>slowlog_get (N)</strong>: 获取N条慢查询日志记录。</li></ul><h2 id="mysql-相关指标" tabindex="-1">MySQL 相关指标 <a class="header-anchor" href="#mysql-相关指标" aria-label="Permalink to &quot;MySQL 相关指标&quot;">​</a></h2><h3 id="_1-资源使用-1" tabindex="-1">1. <strong>资源使用</strong> <a class="header-anchor" href="#_1-资源使用-1" aria-label="Permalink to &quot;1. **资源使用**&quot;">​</a></h3><ul><li><strong><code>Cpu_usage</code></strong>: CPU的使用率。</li><li><strong><code>Memory_usage</code></strong>: 内存的使用率。</li><li><strong><code>Disk_space_usage</code></strong>: 磁盘的使用情况。</li></ul><h3 id="_2-连接数" tabindex="-1">2. <strong>连接数</strong> <a class="header-anchor" href="#_2-连接数" aria-label="Permalink to &quot;2. **连接数**&quot;">​</a></h3><ul><li><strong><code>Threads_connected</code></strong>: 当前连接的线程数。</li><li><strong><code>Threads_running</code></strong>: 当前处于运行状态的线程数。</li><li><strong><code>Threads_created</code></strong>: 自启动以来创建的线程数。</li><li><strong><code>Max_used_connections</code></strong>: MySQL历史上最大并发连接数。</li><li><strong><code>Aborted_connects</code></strong>: 尝试连接但失败的次数。</li></ul><h3 id="_3-查询性能" tabindex="-1">3. <strong>查询性能</strong> <a class="header-anchor" href="#_3-查询性能" aria-label="Permalink to &quot;3. **查询性能**&quot;">​</a></h3><ul><li><strong><code>Queries</code></strong>: 每秒查询数。</li><li><strong><code>Slow_queries</code></strong>: 慢查询的数量。</li><li><strong><code>Select_full_join</code></strong>: 执行全表连接的查询数。</li><li><strong><code>Select_range_check</code></strong>: 使用范围查询的次数。</li><li><strong><code>Sort_merge_passes</code></strong>: 执行排序时需要的合并操作数。</li><li><strong><code>Com_select</code>, <code>Com_insert</code>, <code>Com_update</code>, <code>Com_delete</code></strong>: 分别表示SELECT、INSERT、UPDATE、DELETE命令的执行次数。</li></ul><h3 id="_4-缓存相关指标" tabindex="-1">4. <strong>缓存相关指标</strong> <a class="header-anchor" href="#_4-缓存相关指标" aria-label="Permalink to &quot;4. **缓存相关指标**&quot;">​</a></h3><ul><li><strong><code>Key_read_requests</code></strong>: 从缓存中读取的请求数。</li><li><strong><code>Key_reads</code></strong>: 从磁盘读取的键数。</li><li><strong><code>Key_write_requests</code></strong>: 向缓存中写入的请求数。</li><li><strong><code>Key_writes</code></strong>: 写入缓存的键数。</li><li><strong><code>InnoDB_buffer_pool_reads</code></strong>: 从InnoDB缓存池读取的次数。</li><li><strong><code>InnoDB_buffer_pool_pages_dirty</code></strong>: 缓存池中脏页的数量。</li></ul><h3 id="_5-复制相关指标" tabindex="-1">5. <strong>复制相关指标</strong> <a class="header-anchor" href="#_5-复制相关指标" aria-label="Permalink to &quot;5. **复制相关指标**&quot;">​</a></h3><ul><li><strong><code>Seconds_Behind_Master</code></strong>: 从服务器与主服务器的延迟时间（秒）。</li><li><strong><code>Slave_IO_Running</code></strong>: 复制IO线程的状态。</li><li><strong><code>Slave_SQL_Running</code></strong>: 复制SQL线程的状态。</li></ul><h3 id="_6-innodb" tabindex="-1">6. <strong>InnoDB</strong> <a class="header-anchor" href="#_6-innodb" aria-label="Permalink to &quot;6. **InnoDB**&quot;">​</a></h3><ul><li><strong><code>Innodb_buffer_pool_size</code></strong>: InnoDB缓冲池的大小。</li><li><strong><code>Innodb_buffer_pool_free</code></strong>: 缓冲池中未使用的空间。</li><li><strong><code>Innodb_buffer_pool_wait_free</code></strong>: 等待可用内存的次数。</li><li><strong><code>Innodb_row_lock_current_waits</code></strong>: 当前等待行锁的次数。</li></ul><h2 id="minio-相关指标" tabindex="-1">MinIO 相关指标 <a class="header-anchor" href="#minio-相关指标" aria-label="Permalink to &quot;MinIO 相关指标&quot;">​</a></h2><h3 id="_1-资源使用-2" tabindex="-1">1. <strong>资源使用</strong> <a class="header-anchor" href="#_1-资源使用-2" aria-label="Permalink to &quot;1. **资源使用**&quot;">​</a></h3><ul><li><strong><code>minio_memory_used_bytes</code></strong>: 当前内存使用量（字节数）。</li><li><strong><code>minio_cpu_usage</code></strong>: CPU使用率。</li><li><strong><code>minio_cpu_load</code></strong>: CPU负载（1分钟、5分钟、15分钟平均负载</li></ul><h3 id="_2-请求和吞吐量" tabindex="-1">2. <strong>请求和吞吐量</strong> <a class="header-anchor" href="#_2-请求和吞吐量" aria-label="Permalink to &quot;2. **请求和吞吐量**&quot;">​</a></h3><ul><li><strong><code>minio_api_requests_total</code></strong>: API 请求的总数。</li><li><strong><code>minio_api_request_duration_seconds</code></strong>: API 请求的响应时间（秒）。</li><li><strong><code>minio_api_requests_rate</code></strong>: API 请求速率（每秒请求数）。</li><li><strong><code>minio_api_errors_total</code></strong>: API 请求中的错误总数。</li><li><strong><code>minio_api_success_total</code></strong>: 成功处理的 API 请求总数。</li><li><strong><code>minio_api_latency_seconds</code></strong>: API 请求的延迟时间（秒）。</li></ul><h3 id="_3-网络" tabindex="-1">3. <strong>网络</strong> <a class="header-anchor" href="#_3-网络" aria-label="Permalink to &quot;3. **网络**&quot;">​</a></h3><ul><li><strong><code>minio_network_received_bytes_total</code></strong>: 从客户端接收的总字节数。</li><li><strong><code>minio_network_sent_bytes_total</code></strong>: 向客户端发送的总字节数。</li><li><strong><code>minio_network_error_total</code></strong>: 网络错误的总数。</li><li><strong><code>minio_network_requests_total</code></strong>: 网络请求总数。</li></ul><h3 id="_4-错误和异常" tabindex="-1">4. <strong>错误和异常</strong> <a class="header-anchor" href="#_4-错误和异常" aria-label="Permalink to &quot;4. **错误和异常**&quot;">​</a></h3><ul><li><strong><code>minio_errors_total</code></strong>: 总的错误次数。</li><li><strong><code>minio_error_rate</code></strong>: 错误率（每秒发生的错误数）。</li><li><strong><code>minio_object_errs</code></strong>: 对象存储中的错误数量。</li><li><strong><code>minio_request_errs</code></strong>: API 请求中的错误数量。</li></ul><h3 id="_5-健康和状态" tabindex="-1">5. <strong>健康和状态</strong> <a class="header-anchor" href="#_5-健康和状态" aria-label="Permalink to &quot;5. **健康和状态**&quot;">​</a></h3><ul><li><p><strong><code>minio_health_check</code></strong>: MinIO实例的健康检查状态。</p></li><li><p><strong><code>minio_uptime_seconds</code></strong>: MinIO实例的运行时间（秒）。</p></li><li><p><strong><code>minio_heartbeat</code></strong>: 用于检测节点心跳的状态。</p></li><li><p><strong><code>minio_watchdog_timeouts</code></strong>: 监控超时的次数。</p></li><li><p><strong><code>minio_cluster_health</code></strong>: MinIO集群的健康状况（用于集群部署）。</p></li><li><p><strong><code>minio_cluster_nodes</code></strong>: 集群中可用节点的数量。</p></li></ul>',61)]))}const h=e(n,[["render",i]]);export{u as __pageData,h as default};
